// This file is generated by inklang, see <https://github.com/inklang/inklang>.
// Do not edit it directly since it'll be overwritten.

import { parse as inklang__url_parse } from "@inklang/url";
import { createRequest as inklang__http_createRequest, createHeaders as inklang__http_createHeaders, sendRequest as inklang__http_sendRequest, readResponseBodyAsString as inklang__http_readResponseBodyAsString } from "@inklang/http";
import { parse as inklang__json_parse, asArray as inklang__json_asArray, getProperty as inklang__json_getProperty, asString as inklang__json_asString, asBoolean as inklang__json_asBoolean } from "@inklang/json";
import { create as inklang__array_create, valueAtIndex as inklang__array_valueAtIndex, push as inklang__array_push } from "@inklang/array";
import { stripAll as inklang__string_stripAll, split as inklang__string_split } from "@inklang/string";

export class Feed {
	name;
	identifier;
	isDefault;
	constructor (name, identifier, isDefault) {
		this.name = name;
		this.identifier = identifier;
		this.isDefault = isDefault;
	}
}
export const getFeeds = async () => {
	let url = inklang__url_parse("http://webservices-v2.crous-mobile.fr/feed/feeds.json");
	let request = inklang__http_createRequest("GET", url, inklang__http_createHeaders());
	let response = await inklang__http_sendRequest(request);
	let body = await inklang__http_readResponseBodyAsString(response);
	let json = inklang__json_parse(body);
	let feeds = inklang__array_create();
	for (let feed of inklang__json_asArray(inklang__json_getProperty(json, "results"))) {
		let name = inklang__string_stripAll(inklang__json_asString(inklang__json_getProperty(feed, "name")), "FLUX ");
		let parts = inklang__string_split(inklang__json_asString(inklang__json_getProperty(feed, "url")), "/");
		let identifier = inklang__array_valueAtIndex(parts, 4);
		feeds = inklang__array_push(feeds, new Feed(name, identifier, inklang__json_asBoolean(inklang__json_getProperty(feed, "is_default"))));
	}
	return feeds;
}